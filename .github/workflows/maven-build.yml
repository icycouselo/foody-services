# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Maven Build
on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - develop


jobs:
  include-icy-maven-build:
    uses: ./.github/workflows/icy-maven-build.yml
    with:
      java-version: 17
      distribution: 'temurin'


#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#
#      - name: Package application and create artifact
#        run: mvn verify -Djar.finalName=${{ env.API_WRAPPER_NAME }}
#    with:
#      application_name: ${{ inputs.application_name }}
#      target_folder_location: ${{ inputs.target_folder_location }}


#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Package application and create artifact
#        run: mvn verify -Djar.finalName=${{ env.API_WRAPPER_NAME }}
#
#      - name: Create upload folder
#        run: mkdir staging && cp -r */target/* staging
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ env.APPLICATION_NAME }}
#          path: staging
#          retention-days: 5
#
#  snyk-security:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@master
#      - name: Snyk security tests
#        uses: snyk/actions/maven-3-jdk-11@master
#        continue-on-error: true # To make sure that SARIF upload gets called
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          args: --sarif-file-output=snyk.sarif
#      - name: Upload result to GitHub Code Scanning
#        uses: github/codeql-action/upload-sarif@v2
#        with:
#          sarif_file: snyk.sarif
